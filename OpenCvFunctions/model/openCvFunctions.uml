<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_HhFBwE4UEeiTBv0OlW4vQw" name="openCvFunctions">
  <packagedElement xmi:type="uml:Class" xmi:id="_MVkcwE4aEeiTBv0OlW4vQw" name="OpenCvFunctions">
    <ownedBehavior xmi:type="uml:FunctionBehavior" xmi:id="_YyT5AE4UEeiTBv0OlW4vQw" name="fbNull">
      <language>CPP</language>
      <body>;</body>
    </ownedBehavior>
    <ownedBehavior xmi:type="uml:FunctionBehavior" xmi:id="_S5MioE6cEeqyNvPDU5XeYA" name="fbAddBorder" specification="_Ide5sFC1Eeq1EqXxxN7UeQ">
      <ownedParameter xmi:id="_yBR78FDAEeq9rLGcLmUOPg" name="inputImage">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_RorooJrdEeqzWLJk_3wCrQ" name="inputNumber">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
      <ownedParameter xmi:id="_BbExkJEZEeqvZ7mBc2P9AQ" name="outputImage" direction="return">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
      <language>CPP</language>
      <language>INCLUDE</language>
      <language>LIBRARY</language>
      <language>LIBRARY0</language>
      <language>LIBRARY1</language>
      <language>LIBRARY2</language>
      <body>using namespace cv;

std::cout&lt;&lt;&quot;Add border&quot; &lt;&lt; std::endl;
std::cout&lt;&lt;&quot;Border: &quot; &lt;&lt; inputNumber &lt;&lt; std::endl;

int top, bottom, left, right;
int borderType = BORDER_CONSTANT;
RNG rng(12345);

if( inputImage->empty() )
{
  printf(&quot; No data entered, please enter the path to an image file \n&quot;);
}

//top = (int) (0.05*(inputImage->rows));
top = inputNumber;
bottom = inputNumber;
left = inputNumber;
right = inputNumber;

Scalar value( rng.uniform(0, 255), rng.uniform(0, 255), rng.uniform(0, 255) );

outputImage = inputImage;

copyMakeBorder( *inputImage, *outputImage, top, bottom, left, right, borderType, value );</body>
      <body>#include &lt;iostream>
#include &quot;opencv2/opencv.hpp&quot;</body>
      <body>libopencv_core
libopencv_imgproc
libopencv_highgui
libopencv_imgcodecs</body>
    </ownedBehavior>
    <ownedBehavior xmi:type="uml:FunctionBehavior" xmi:id="_EBJJ4FC4Eeq1EqXxxN7UeQ" name="fbLoadImage" specification="_Bx5gkFC3Eeq1EqXxxN7UeQ">
      <ownedParameter xmi:id="_OIhWQKEMEeq_u6OnhKUNsA" name="inputText">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
      <ownedParameter xmi:id="_puGsMFC9EeqcOK2DUAL-Pw" name="outputImage" direction="return">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
      <language>CPP</language>
      <language>INCLUDE</language>
      <language>LIBRARY</language>
      <language>LIBRARY0</language>
      <language>LIBRARY1</language>
      <language>LIBRARY2</language>
      <body>using namespace cv;

std::cout&lt;&lt;&quot;Bild laden&quot; &lt;&lt; std::endl;

const char* image_name = inputText.c_str();

// Load Image
std::shared_ptr&lt;cv::Mat> matPointer = std::make_shared&lt;cv::Mat>(imread( image_name, IMREAD_COLOR ));

if(matPointer->empty() )
{
      printf(&quot;No data entered, please enter the path to an image file \n&quot;);
}
outputImage = matPointer;
//end</body>
      <body>#include &lt;iostream>
#include &quot;opencv2/opencv.hpp&quot;</body>
      <body>libopencv_core
libopencv_imgproc
libopencv_highgui
libopencv_imgcodecs</body>
    </ownedBehavior>
    <ownedBehavior xmi:type="uml:FunctionBehavior" xmi:id="_vgNugJEYEeqvZ7mBc2P9AQ" name="fbSaveImage" specification="_aj080I02Eeq0h-SaVz8HEQ">
      <ownedParameter xmi:id="_8JPrkJEYEeqvZ7mBc2P9AQ" name="inputImage">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_rSXoAKEREeqWccW7oP29Ww" name="inputText">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
      <language>CPP</language>
      <language>INCLUDE</language>
      <language>LIBRARY</language>
      <body>using namespace cv;

std::cout&lt;&lt;&quot;Save image&quot; &lt;&lt; std::endl;

if( inputImage->empty() )
{
	std::cout&lt;&lt;&quot;No data entered, please enter the path to an image file. Std&quot; &lt;&lt; std::endl;
      printf(&quot; No data entered, please enter the path to an image file \n&quot;);
}

imwrite( inputText, *inputImage);</body>
      <body>#include &lt;iostream>
#include &quot;opencv2/opencv.hpp&quot;</body>
      <body>libopencv_core
libopencv_imgproc
libopencv_highgui
libopencv_imgcodecs</body>
    </ownedBehavior>
    <ownedBehavior xmi:type="uml:FunctionBehavior" xmi:id="_1evW4JEiEeqn6NSw2h6Cow" name="fbShowImage" specification="_9nlGQJEiEeqn6NSw2h6Cow">
      <ownedParameter xmi:id="_52faQJEiEeqn6NSw2h6Cow" name="inputImage">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
      <language>CPP</language>
      <language>INCLUDE</language>
      <language>LIBRARY</language>
      <body>using namespace cv;

if( inputImage->empty() )
{
      printf(&quot; No data entered, please enter the path to an image file \n&quot;);
}

//const char* window_name = &quot;OpenCV MDE4CPP - Show Image&quot;;
//namedWindow(window_name, WINDOW_AUTOSIZE );

imshow( &quot;Lachen!&quot;, *inputImage);
 waitKey(10);</body>
      <body>#include &lt;iostream>
#include &quot;opencv2/opencv.hpp&quot;</body>
      <body>libopencv_core
libopencv_imgproc
libopencv_highgui
libopencv_imgcodecs</body>
    </ownedBehavior>
    <ownedBehavior xmi:type="uml:FunctionBehavior" xmi:id="_XJgXoJE_EeqXzolMok_G0Q" name="fbGaussianBlur" specification="_lgz0YJE_EeqXzolMok_G0Q">
      <ownedParameter xmi:id="_c6mMgJE_EeqXzolMok_G0Q" name="inputImage">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_vHVmoKGOEeq9gvhtp5pcpQ" name="inputNumber">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
      <ownedParameter xmi:id="_d4szgJE_EeqXzolMok_G0Q" name="outputImage" direction="return">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
      <language>CPP</language>
      <language>INCLUDE</language>
      <language>LIBRARY</language>
      <body>using namespace cv;

std::cout&lt;&lt;&quot;Gaussian blur - ksize: &quot; &lt;&lt; inputNumber &lt;&lt; std::endl;

Size ksize = Size(inputNumber,inputNumber);
double sigmaX = 0;
double sigmaY = 0;
int borderType = BORDER_CONSTANT;

if( inputImage->empty() )
{
  printf(&quot; No data entered, please enter the path to an image file \n&quot;);
}

outputImage = inputImage;

GaussianBlur(
		*inputImage,
		*outputImage,
		ksize,
		sigmaX,
		sigmaY,
		borderType
	);

</body>
      <body>#include &lt;iostream>
#include &quot;opencv2/opencv.hpp&quot;</body>
      <body>libopencv_core
libopencv_imgproc
libopencv_highgui
libopencv_imgcodecs</body>
    </ownedBehavior>
    <ownedBehavior xmi:type="uml:FunctionBehavior" xmi:id="_3LyBUJE_EeqXzolMok_G0Q" name="fbFilter2D_mde" specification="_7LbtwJE_EeqXzolMok_G0Q">
      <ownedParameter xmi:id="_3LyBUZE_EeqXzolMok_G0Q" name="inputImage">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_Dk4SwKGYEeq9gvhtp5pcpQ" name="inputFilterImage">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_3LyBUpE_EeqXzolMok_G0Q" name="outputImage" direction="return">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
      <language>CPP</language>
      <language>INCLUDE</language>
      <language>LIBRARY</language>
      <body>using namespace cv;

std::cout&lt;&lt;&quot;Filter 2D&quot; &lt;&lt; std::endl;

int ddepth = -1 ;
Point anchor = Point(-1,-1);
double delta = 0;
int borderType = BORDER_CONSTANT;

if( inputImage->empty() )
{
  printf(&quot; No data entered, please enter the path to an image file \n&quot;);
}

/* Create Template Filter File
Mat kernel;
int ind = 2;
int kernel_size;
kernel_size = 3 + 2*( ind%5 );
kernel = Mat::ones( kernel_size, kernel_size, CV_32F )/ (float)(kernel_size*kernel_size);
kernel.convertTo(kernel, CV_8U, 255.0); 
cvtColor(kernel, kernel, COLOR_GRAY2RGB);
imwrite(&quot;filter255.bmp&quot;, kernel);
*/

cvtColor(*inputFilterImage, *inputFilterImage, COLOR_BGR2GRAY);
(*inputFilterImage).convertTo(*inputFilterImage, CV_32F, 1/255.0); 

outputImage = inputImage;

filter2D(
		*inputImage,
		*outputImage,
		ddepth,
		*inputFilterImage,
		anchor,
		delta,
		borderType
	);
</body>
      <body>#include &lt;iostream>
#include &quot;opencv2/opencv.hpp&quot;
</body>
      <body>libopencv_core
libopencv_imgproc
libopencv_highgui
libopencv_imgcodecs</body>
    </ownedBehavior>
    <ownedBehavior xmi:type="uml:Activity" xmi:id="_pyKJwJnPEeq36Op0knvQww" name="parentActivity" node="_rXPbwJnQEeq36Op0knvQww">
      <node xmi:type="uml:CallBehaviorAction" xmi:id="_rXPbwJnQEeq36Op0knvQww" name="tempNull_cba" behavior="_YyT5AE4UEeiTBv0OlW4vQw"/>
    </ownedBehavior>
    <ownedBehavior xmi:type="uml:FunctionBehavior" xmi:id="_obD-8KzeEeqSVs73rKl_Aw" name="fbStartVideo" specification="_0HH9cKzeEeqSVs73rKl_Aw">
      <ownedParameter xmi:id="_PZCewK-5Eeq0--SMeDRq3Q" name="outputCap" direction="return">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#_xklFAK9LEeqSGt-f7KAwpg"/>
      </ownedParameter>
      <language>CPP</language>
      <language>INCLUDE</language>
      <language>LIBRARY</language>
      <language>LIBRARY0</language>
      <language>LIBRARY1</language>
      <language>LIBRARY2</language>
      <body>using namespace cv;

std::cout&lt;&lt;&quot;Start Video&quot; &lt;&lt; std::endl;

std::shared_ptr&lt;cv::VideoCapture> cap = std::make_shared&lt;cv::VideoCapture>();

if(!cap->open(0))
{
	std::cout&lt;&lt;&quot;Start Video Fehler&quot; &lt;&lt; std::endl;
}

outputCap = cap;</body>
      <body>#include &lt;iostream>
#include &quot;opencv2/opencv.hpp&quot;</body>
      <body>libopencv_core
libopencv_imgproc
libopencv_highgui
libopencv_imgcodecs
</body>
    </ownedBehavior>
    <ownedBehavior xmi:type="uml:FunctionBehavior" xmi:id="_UQtNMK9JEeqSGt-f7KAwpg" name="fbGetImageFromVideo" specification="_KIzMQK9NEeqnwdQqMIjLag">
      <ownedParameter xmi:id="_ISeZQK9MEeqvN5xy4b3Q6Q" name="inputCap">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#_xklFAK9LEeqSGt-f7KAwpg"/>
      </ownedParameter>
      <ownedParameter xmi:id="_ISeZQa9MEeqvN5xy4b3Q6Q" name="outputImage" direction="return">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_stGccK--Eeq-Cp0IjlPwng" name="outputCap" direction="out">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#_xklFAK9LEeqSGt-f7KAwpg"/>
      </ownedParameter>
      <language>CPP</language>
      <language>INCLUDE</language>
      <language>LIBRARY</language>
      <language>LIBRARY0</language>
      <language>LIBRARY1</language>
      <language>LIBRARY2</language>
      <body>using namespace cv;

std::cout&lt;&lt;&quot;Video Bild laden&quot; &lt;&lt; std::endl;

VideoCapture cap;
cap = *inputCap;
std::shared_ptr&lt;cv::Mat> image = std::make_shared&lt;cv::Mat>();
cap >> *image;
outputImage = image;
outputCap = inputCap;</body>
      <body>#include &lt;iostream>
#include &quot;opencv2/opencv.hpp&quot;</body>
      <body>libopencv_core
libopencv_imgproc
libopencv_highgui
libopencv_imgcodecs
</body>
    </ownedBehavior>
    <ownedOperation xmi:id="_Ide5sFC1Eeq1EqXxxN7UeQ" name="addBorder" method="_S5MioE6cEeqyNvPDU5XeYA">
      <ownedParameter xmi:id="__SxAIFDAEeq9rLGcLmUOPg" name="inputImage">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_YvHN4JrfEeqzWLJk_3wCrQ" name="inputNumber">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
      <ownedParameter xmi:id="_YjR4sJEYEeqvZ7mBc2P9AQ" name="outputImage" direction="return">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
    </ownedOperation>
    <ownedOperation xmi:id="_Bx5gkFC3Eeq1EqXxxN7UeQ" name="loadImage" method="_EBJJ4FC4Eeq1EqXxxN7UeQ">
      <ownedParameter xmi:id="_TMjQ0KEMEeq_u6OnhKUNsA" name="inputText">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
      <ownedParameter xmi:id="_rZEHQFC_Eeq9rLGcLmUOPg" name="outputImage" direction="return">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
    </ownedOperation>
    <ownedOperation xmi:id="_aj080I02Eeq0h-SaVz8HEQ" name="saveImage" method="_vgNugJEYEeqvZ7mBc2P9AQ">
      <ownedParameter xmi:id="_Rh9LAJEYEeqvZ7mBc2P9AQ" name="inputImage">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_wO_TAKEREeqWccW7oP29Ww" name="inputText">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </ownedOperation>
    <ownedOperation xmi:id="_9nlGQJEiEeqn6NSw2h6Cow" name="showImage" method="_1evW4JEiEeqn6NSw2h6Cow">
      <ownedParameter xmi:id="_C9c-wJEjEeqn6NSw2h6Cow" name="inputImage">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
    </ownedOperation>
    <ownedOperation xmi:id="_lgz0YJE_EeqXzolMok_G0Q" name="gaussianBlur" method="_XJgXoJE_EeqXzolMok_G0Q">
      <ownedParameter xmi:id="_oupCUJE_EeqXzolMok_G0Q" name="inputImage">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_zUPr8KGOEeq9gvhtp5pcpQ" name="inputNumber">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
      <ownedParameter xmi:id="_rFzuAJE_EeqXzolMok_G0Q" name="outputImage" direction="return">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
    </ownedOperation>
    <ownedOperation xmi:id="_7LbtwJE_EeqXzolMok_G0Q" name="filter2D_mde" visibility="public" method="_3LyBUJE_EeqXzolMok_G0Q">
      <ownedParameter xmi:id="_7LbtwZE_EeqXzolMok_G0Q" name="inputImage">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_GCu1QKGYEeq9gvhtp5pcpQ" name="inputFilterImage">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_7LbtwpE_EeqXzolMok_G0Q" name="outputImage" direction="return">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
    </ownedOperation>
    <ownedOperation xmi:id="_0HH9cKzeEeqSVs73rKl_Aw" name="startVideo" method="_obD-8KzeEeqSVs73rKl_Aw">
      <ownedParameter xmi:id="_7txtsK-7EeqBitCZL73fpQ" name="outputCap" direction="return">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#_xklFAK9LEeqSGt-f7KAwpg"/>
      </ownedParameter>
    </ownedOperation>
    <ownedOperation xmi:id="_KIzMQK9NEeqnwdQqMIjLag" name="getImageFromVideo" method="_UQtNMK9JEeqSGt-f7KAwpg">
      <ownedParameter xmi:id="_6QAvMK-7EeqBitCZL73fpQ" name="inputCap">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#_xklFAK9LEeqSGt-f7KAwpg"/>
      </ownedParameter>
      <ownedParameter xmi:id="_NdOKYa9NEeqnwdQqMIjLag" name="outputImage" direction="return">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#7TR_Ew6D.AACAWC1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_vXAd8K--Eeq-Cp0IjlPwng" name="outputCap" direction="out">
        <type xmi:type="uml:Class" href="../../Mat/model/cv.uml#_xklFAK9LEeqSGt-f7KAwpg"/>
      </ownedParameter>
    </ownedOperation>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_IXh64J9SEeqmH99faP8H5A" name="HelperFunctions" classifierBehavior="_SJeGMKDrEeqBM9vnuq_wQQ">
    <ownedBehavior xmi:type="uml:Activity" xmi:id="_MzKYsJ9SEeqmH99faP8H5A" name="parentActivity" node="_MzKYtp9SEeqmH99faP8H5A _MzKYt59SEeqmH99faP8H5A _MzKYuJ9SEeqmH99faP8H5A">
      <edge xmi:type="uml:ControlFlow" xmi:id="_MzKYsZ9SEeqmH99faP8H5A" target="_MzKYuJ9SEeqmH99faP8H5A" source="_MzKYtp9SEeqmH99faP8H5A">
        <weight xmi:type="uml:LiteralInteger" xmi:id="_MzKYsp9SEeqmH99faP8H5A" name="Initial1_To_ActivityFinal1_weight"/>
      </edge>
      <edge xmi:type="uml:ControlFlow" xmi:id="_MzKYs59SEeqmH99faP8H5A" target="_MzKYt59SEeqmH99faP8H5A" source="_MzKYuJ9SEeqmH99faP8H5A">
        <guard xmi:type="uml:LiteralBoolean" xmi:id="_MzKYtJ9SEeqmH99faP8H5A" name="tempNull_cba_To_ActivityFinal1_guard" value="true"/>
        <weight xmi:type="uml:LiteralInteger" xmi:id="_MzKYtZ9SEeqmH99faP8H5A" name="tempNull_cba_To_ActivityFinal1_weight"/>
      </edge>
      <node xmi:type="uml:InitialNode" xmi:id="_MzKYtp9SEeqmH99faP8H5A" name="Initial1" outgoing="_MzKYsZ9SEeqmH99faP8H5A"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_MzKYt59SEeqmH99faP8H5A" name="ActivityFinal1" incoming="_MzKYs59SEeqmH99faP8H5A"/>
      <node xmi:type="uml:CallBehaviorAction" xmi:id="_MzKYuJ9SEeqmH99faP8H5A" name="tempNull_cba" incoming="_MzKYsZ9SEeqmH99faP8H5A" outgoing="_MzKYs59SEeqmH99faP8H5A" behavior="_OkyuYJ9SEeqmH99faP8H5A"/>
    </ownedBehavior>
    <ownedBehavior xmi:type="uml:FunctionBehavior" xmi:id="_OkyuYJ9SEeqmH99faP8H5A" name="fbNull">
      <language>CPP</language>
      <body>;</body>
    </ownedBehavior>
    <ownedBehavior xmi:type="uml:FunctionBehavior" xmi:id="_S-HfEJ9SEeqmH99faP8H5A" name="fbReadInteger" specification="_W3VMUJ9SEeqmH99faP8H5A">
      <ownedParameter xmi:id="_dKmhMJ9SEeqmH99faP8H5A" name="number" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
      <language>CPP</language>
      <language>INCLUDE</language>
      <body>std::cout&lt;&lt;&quot;Gib eine Zahl ein: &quot;&lt;&lt; std::endl;
std::cin >> number;</body>
      <body>#include &lt;iostream></body>
    </ownedBehavior>
    <ownedBehavior xmi:type="uml:FunctionBehavior" xmi:id="_SJeGMKDrEeqBM9vnuq_wQQ" name="fbReadFilePath">
      <ownedParameter xmi:id="_dVOM8KDrEeqBM9vnuq_wQQ" name="text" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
      <language>CPP</language>
      <language>INCLUDE</language>
      <language>LIBRARY</language>
      <body>std::cout&lt;&lt;&quot;Wähle eine Datei aus: &quot;&lt;&lt; std::endl;
nfdchar_t *outPath = NULL;
    nfdresult_t result = NFD_OpenDialog( NULL, NULL, &amp;outPath );
        
    if ( result == NFD_OKAY ) {
	text = outPath; 
        puts(outPath);
        free(outPath);
    }
    else if ( result == NFD_CANCEL ) {
        puts(&quot;Abbruch!&quot;);
    }
    else {
        printf(&quot;Error: %s\n&quot;, NFD_GetError() );
    }</body>
      <body>#include &lt;iostream>
#include &lt;nfd.h>
#include &lt;stdio.h>
#include &lt;stdlib.h></body>
      <body>libnf
</body>
    </ownedBehavior>
    <ownedBehavior xmi:type="uml:FunctionBehavior" xmi:id="_pScNEKEQEeqPk8zz-Wtcgg" name="fbReadFileSavePath">
      <ownedParameter xmi:id="_pScNEaEQEeqPk8zz-Wtcgg" name="text" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
      <language>CPP</language>
      <language>INCLUDE</language>
      <language>LIBRARY</language>
      <body>std::cout&lt;&lt;&quot;Wähle einen Ordner aus: &quot;&lt;&lt; std::endl;
nfdchar_t *outPath = NULL;
    nfdresult_t result = NFD_SaveDialog( NULL, NULL, &amp;outPath );
        
    if ( result == NFD_OKAY ) {
	text = outPath; 
        puts(outPath);
        free(outPath);
    }
    else if ( result == NFD_CANCEL ) {
        puts(&quot;Abbruch!&quot;);
    }
    else {
        printf(&quot;Error: %s\n&quot;, NFD_GetError() );
    }</body>
      <body>#include &lt;iostream>
#include &lt;nfd.h>
#include &lt;stdio.h>
#include &lt;stdlib.h></body>
      <body>libnf
</body>
    </ownedBehavior>
    <ownedBehavior xmi:type="uml:FunctionBehavior" xmi:id="_W1p4YKznEeqmjJtqCPCPTA" name="fbAddOne" specification="_i6Rg0KznEeqmjJtqCPCPTA">
      <ownedParameter xmi:id="_W1p4YaznEeqmjJtqCPCPTA" name="numberIn">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
      <ownedParameter xmi:id="_dhpPQKznEeqmjJtqCPCPTA" name="numberOut" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
      <language>CPP</language>
      <body>numberOut = numberIn +1;</body>
    </ownedBehavior>
    <ownedBehavior xmi:type="uml:FunctionBehavior" xmi:id="_el7hUKzoEeq7o6QpzdmqDA" name="fbIsLowerThan">
      <ownedParameter xmi:id="_feYzUKzoEeq7o6QpzdmqDA" name="numberIn">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
      <ownedParameter xmi:id="_feYzUazoEeq7o6QpzdmqDA" name="numberLimitIn">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
      <ownedParameter xmi:id="_feZaYKzoEeq7o6QpzdmqDA" name="boolOut" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedParameter>
      <language>CPP</language>
      <language>INCLUDE</language>
      <body>if(numberIn &lt; numberLimitIn)
{
	boolOut = true;
}
else
{
	boolOut = false;
}</body>
    </ownedBehavior>
    <ownedOperation xmi:id="_W3VMUJ9SEeqmH99faP8H5A" name="readInteger" method="_S-HfEJ9SEeqmH99faP8H5A">
      <ownedParameter xmi:id="_cIIXkJ9SEeqmH99faP8H5A" name="number" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </ownedOperation>
    <ownedOperation xmi:id="_V2o7gKDrEeqBM9vnuq_wQQ" name="readFilePath">
      <ownedParameter xmi:id="_V2o7gaDrEeqBM9vnuq_wQQ" name="text" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </ownedOperation>
    <ownedOperation xmi:id="_opZQEKEQEeqPk8zz-Wtcgg" name="readFileSavePath">
      <ownedParameter xmi:id="_opZQEaEQEeqPk8zz-Wtcgg" name="text" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </ownedOperation>
    <ownedOperation xmi:id="_i6Rg0KznEeqmjJtqCPCPTA" name="addOne" method="_W1p4YKznEeqmjJtqCPCPTA">
      <ownedParameter xmi:id="_l80EwKznEeqmjJtqCPCPTA" name="numberIn">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
      <ownedParameter xmi:id="_l80EwaznEeqmjJtqCPCPTA" name="numberOut" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </ownedOperation>
    <ownedOperation xmi:id="_Tr1yUKzoEeq7o6QpzdmqDA" name="isLowerThan">
      <ownedParameter xmi:id="_Tr1yUazoEeq7o6QpzdmqDA" name="numberIn">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
      <ownedParameter xmi:id="_YU_uwKzoEeq7o6QpzdmqDA" name="numberLimitIn">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
      <ownedParameter xmi:id="_Tr1yUqzoEeq7o6QpzdmqDA" name="boolOut" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedParameter>
    </ownedOperation>
  </packagedElement>
</uml:Model>
